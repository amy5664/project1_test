<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgy.Product_sales_platform.dao.mapper.ProductDAO">

	<!-- resultMap: DB 컬럼 → ProductDTO 필드 매핑 -->
	<resultMap id="ProductMap"
		type="com.lgy.Product_sales_platform.dto.ProductDTO">
		<id column="PROD_ID" property="prodId" />
		<result column="PROD_SELLER" property="prodSeller" />
		<result column="PROD_NAME" property="prodName" />
		<result column="PROD_PRICE" property="prodPrice" />
		<result column="PROD_STOCK" property="prodStock" />
		<result column="PROD_DESC" property="prodDesc" />
		<result column="PROD_CODE" property="prodCode" />
		<result column="PROD_REG" property="prodReg" />
		<result column="PROD_UPD" property="prodUpd" />
	</resultMap>

	<!-- 목록 -->
	<select id="getProductList" resultMap="ProductMap">
		SELECT PROD_ID, PROD_SELLER, PROD_NAME, PROD_PRICE, PROD_STOCK,
		PROD_DESC, PROD_CODE, PROD_REG, PROD_UPD
		FROM PRODUCT_DB
		ORDER BY PROD_ID DESC
	</select>

	<!-- 상세 -->
	<select id="getProduct" parameterType="long"
		resultMap="ProductMap">
		SELECT PROD_ID, PROD_SELLER, PROD_NAME, PROD_PRICE, PROD_STOCK,
		PROD_DESC, PROD_CODE, PROD_REG, PROD_UPD
		FROM PRODUCT_DB
		WHERE PROD_ID = #{prodId}
	</select>

<!-- 
  ORACLE에서는 null 파라미터의 타입을 자동 인식하지 못하므로
  prodSeller, prodDesc, prodCode, prodReg 등 null 가능 필드에는 
  jdbcType을 명시해 주어야 한다.
  (명시하지 않으면 "부적합한 열 유형: 1111" 오류 발생)
-->
<!-- 	등록 (PROD_ID: 시퀀스 사용) -->
	<insert id="insertProduct"
		parameterType="com.lgy.Product_sales_platform.dto.ProductDTO">
	
	<!-- PROD_ID 선발급 -->	
	<selectKey keyProperty="prodId" resultType="long" order="BEFORE">
		SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	
		INSERT INTO PRODUCT_DB (
		PROD_ID, PROD_SELLER, PROD_NAME, PROD_PRICE,
		PROD_STOCK,PROD_DESC, PROD_CODE, PROD_REG
		) VALUES (
		#{prodId},
		#{prodSeller, jdbcType=VARCHAR}, 
		#{prodName}, 
		#{prodPrice}, 
		#{prodStock},
		#{prodDesc,  jdbcType=VARCHAR},
    	SEQ_PROD_CODE.NEXTVAL,
    	NVL(#{prodReg, jdbcType=TIMESTAMP}, SYSDATE)
		)
	</insert>
	
	<select id="getProdCodeById" parameterType="long" resultType="long">
  SELECT PROD_CODE FROM PRODUCT_DB WHERE PROD_ID = #{prodId}
</select>

	<!-- 수정 (수정일 자동 반영) -->
	<update id="updateProduct"
		parameterType="com.lgy.Product_sales_platform.dto.ProductDTO">
		UPDATE PRODUCT_DB
		SET 
		PROD_NAME = #{prodName},
		PROD_PRICE = #{prodPrice},
		PROD_STOCK =
		#{prodStock},
		PROD_DESC = #{prodDesc},
		PROD_UPD = SYSDATE
		WHERE PROD_ID = #{prodId}
	</update>

	<!-- 삭제 -->
	<delete id="deleteProduct" parameterType="long">
		DELETE FROM PRODUCT_DB
		WHERE PROD_ID = #{prodId}
	</delete>

</mapper>