<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgy.product_sales_platform.dao.CartDAO">

    <resultMap id="cartResultMap" type="com.lgy.product_sales_platform.dto.CartDTO">
        <id property="cartId" column="CART_ID"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="prodId" column="PROD_ID"/>
        <result property="cartQty" column="CART_QTY"/>
        <result property="regDate" column="REG_DATE"/>
        <!-- Product details for cart list display (JOIN result) -->
        <result property="prodName" column="PROD_NAME"/>
        <result property="prodPrice" column="PROD_PRICE"/>
        <result property="prodSeller" column="PROD_SELLER"/>
        <result property="prodImage" column="PROD_IMAGE"/>
    </resultMap>

    <!-- 회원 ID로 장바구니 목록 조회 (상품 정보 JOIN) -->
    <select id="getCartListByMemberId" resultMap="cartResultMap">
        SELECT 
        C.CART_ID, 
        C.MEMBER_ID, 
        C.PROD_ID, 
        C.CART_QTY, 
        C.REG_DATE, 
        P.PROD_NAME, 
        P.PROD_PRICE, 
        P.PROD_SELLER, 
        I.IMG_PATH AS PROD_IMAGE  FROM CART_DB C 
		JOIN PRODUCT_DB P 
        ON C.PROD_ID = P.PROD_ID
    
    -- ⭐️ 이미지 테이블 JOIN (IMAGE_DB로 변경)
		LEFT JOIN IMAGE_DB I 
        ON P.PROD_ID = I.IMG_PROD_ID 
        AND I.IMG_MAIN = 'Y'  WHERE C.MEMBER_ID = #{memberId}
		ORDER BY C.REG_DATE DESC
    </select>

    <!-- 특정 상품이 장바구니에 이미 있는지 확인 -->
    <select id="getCartItemByMemberIdAndProdId" resultType="com.lgy.product_sales_platform.dto.CartDTO">
        SELECT
            CART_ID as cartId,
            MEMBER_ID as memberId,
            PROD_ID as prodId,
            CART_QTY as cartQty,
            REG_DATE as regDate
        FROM CART_DB
        WHERE MEMBER_ID = #{memberId} AND PROD_ID = #{prodId}
    </select>

    <!-- 장바구니에 상품 추가 -->
    <insert id="insertCart">
        INSERT INTO CART_DB (CART_ID, MEMBER_ID, PROD_ID, CART_QTY, REG_DATE)
        VALUES (CART_SEQ.NEXTVAL, #{memberId}, #{prodId}, #{cartQty}, SYSDATE)
    </insert>

    <!-- 장바구니 상품 수량 업데이트 -->
    <update id="updateCartQuantity" parameterType="com.lgy.product_sales_platform.dto.CartDTO">
        UPDATE CART_DB
        SET CART_QTY = #{cartQty}
        WHERE CART_ID = #{cartId}
        <!-- 보안을 위해 MEMBER_ID 조건도 추가할 수 있지만, Service 계층에서 DTO에 담아 전달하는 방식 사용 -->
    </update>

    <!-- 장바구니 상품 삭제 -->
    <delete id="deleteCart">
        DELETE FROM CART_DB
        WHERE CART_ID = #{cartId} AND MEMBER_ID = #{memberId}
    </delete>

    <!-- 회원 ID로 장바구니 전체 비우기 (주문 완료 후) -->
    <delete id="clearCartByMemberId">
        DELETE FROM CART_DB
        WHERE MEMBER_ID = #{memberId}
    </delete>

</mapper>
